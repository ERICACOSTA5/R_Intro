[
["data-type.html", "2 Datos: tipos y estructuras 2.1 Tipos de datos 2.2 Estructura de datos", " 2 Datos: tipos y estructuras 2.1 Tipos de datos La unidad básica de datos en R es un vector, los cuales pueden ser de diferentes clases. Los que más usaremos son las siguientes cuatro clases. Clase Ejemplo numeric c(12.3, 5, 999) logical c(TRUE, FALSE) integer c(2L, 34L, 0L) character c(‘a’, ‘good’, ‘TRUE’, ‘23.4’) 2.1.1 Vectores # concatenación de elementos atómicos v &lt;- c(8, 7, 9, 10, 10, 111) class(v) ## [1] &quot;numeric&quot; (b &lt;- c(&quot;A&quot;, &quot;b&quot;)) ## [1] &quot;A&quot; &quot;b&quot; class(b) ## [1] &quot;character&quot; is.character(b) ## [1] TRUE is.numeric(b) ## [1] FALSE (m &lt;- c(TRUE, FALSE, T, F)) ; class(m) ## [1] TRUE FALSE TRUE FALSE ## [1] &quot;logical&quot; # Propiedades de v # ?length length(v) ## [1] 6 summary(v) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 7.00 8.25 9.50 25.83 10.00 111.00 #v &lt;- edit(v) sort(v) ## [1] 7 8 9 10 10 111 Operaciones con vectores v - 1 # Medidas de posición mean(v) median(v) # Medidas de dispersión var(v) sd(v) sqrt(var(v)) IQR(v) range(v) quantile(v, 0.1) ecdf(v)(7) max(v) min(v) sum(v) Cree tres nuevos vectores que sean: i) la potencia cuadrada de 3.5 de v; ii) la raiz cubica de v; iii) el logaritmo natural de la diferencia de i) y ii) Secuencia 1:7 seq(from = 0, to = 20, #by=2) # length=4) rep(1:3, times=3) # , each=3 Números aleatorios - distribuciones Tendencias genéticas y fenotípicas de características de crecimiento en el ganado brahman de registro de México (Parra-Bracamonte et al. 2007) set.seed(123) PesoNac &lt;- rnorm(23570, mean=32.2, sd=1.8) range(PesoNac) hist(PesoNac) hist(PesoNac, prob=TRUE) Propiedades de vectores Si colocaramos dos o mas clases diferentes dentro de un mismo vector, R va forzar a que todos los elementos pasen a pertenecer a una misma clase. El número 1.7 cambiaria a “1.7” se fuera creado junto con “a”. y &lt;- c(1.7, &quot;a&quot;) ## character y &lt;- c(TRUE, 2) ## numeric y &lt;- c(TRUE, &quot;a&quot;) ## character Forzando las clases explicitamente as.character(), as.numeric(), as.integer() y as.logical() Factores Factores pueden ser considerados como vectores de enteros que poseen rótulos (labels). resist &lt;- c(&quot;R&quot;, &quot;S&quot;, &quot;S&quot;, &quot;S&quot;, &quot;R&quot;) class(resist) res_f &lt;- as.factor(resist) res_f as.numeric(res_f) table(resist) pie(table(resist)) barplot(table(resist)) De factor para numérico niv_res &lt;- factor(c(&quot;1&quot;, &quot;5&quot;, &quot;7&quot;, &quot;9&quot;)) sum(niv_res) niv_res1 = as.numeric(niv_res) mean(niv_res1) niv_res2 = as.numeric(as.character(niv_res)) mean(niv_res2) Indexación y &lt;- 1:10 y[ ] ## [1] 1 2 3 4 5 6 7 8 9 10 y[2] ## [1] 2 y[1:3] ## [1] 1 2 3 Seleccione los elementos 1° y 3° Condición # ifelse(condición, valor_si_TRUE, valor_si_FALSE) ifelse(y&lt;2, &quot;Low&quot;, &quot;High&quot;) ## [1] &quot;Low&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; &quot;High&quot; Se evaluaron 10 clones de porta-injertos de cítricos según su resistencia a Gomosis del Tronco (Phytophthora parasitica). Los diámetros de la lesión (cm) en el punto de inoculación fueron: 3, 6, 1, 10, 3, 15, 5, 8, 19, 11. Crear un vector “resist” con las categorías S o R, “S” aquellos clones con lesiones por encima de la mediana, y “R” clones con lesiones por debajo de la mediana. 2.1.2 Valores especiales Existen valores reservados para representar datos faltantes, infinitos, e indefiniciones matemáticas. NA (Not Available) significa dato faltante/indisponible. El NA tiene una clase, o sea, pueden ser NA numeric, NA character, etc. NaN (Not a Number) representa indefiniciones matemáticas, como 0/0 y log(-1). Un NaN es un NA, pero no reciprocamente. Inf (Infinito) es un número muy grande, por ejemplo, 1/0 o 10^310. Acepta signo negativo -Inf. NULL representa ausencia de información. # NaN es el resultado de una operación matemática inválida. Significa Not A Number 0/0 ## [1] NaN is.nan(0/0) ## [1] TRUE is.na(0/0) ## [1] TRUE # NULL es el vacio de R. Es como si el objeto no existiese a = NULL a ## NULL # Inf significa infinito. Es el resultado de operaciones matemáticas cuyo limite es infinito. 1/0 ## [1] Inf 1/Inf ## [1] 0 # NA es una constante lógica de R. Significa Not Available. NA puede ser # convertido para casi todos los tipos de vectores de R. Se usa principalmente para indicar valores faltantes. y &lt;- c(2, 4, NA, 6) is.na(y) ## [1] FALSE FALSE TRUE FALSE mean(y) ## [1] NA Calcule el promedio de y (use la ayuda de R en caso necesario) 2.2 Estructura de datos 2.2.1 Data frames Conjunto de observaciones (filas) y variables (columnas). A diferencia que en las matrices, las columnas pueden tener diferentes tipos (clases) de variables como por ejemplo numéricas, categóricas, lógicas, fechas. En numerosos paquetes de R, hay data frames disponibles para ejemplos de aplicación de funciones. Un ejemplo muy usado, que está en el paquete base es el dataset “iris”. ?iris View(iris) # ya activo desde inicio de sesión por default Explore el dataset iris con las siguientes funciones con iris y anote sus resultados - head() - tail() - dim() - names() - str() 2.2.2 Filtrado de datasets data[fila, columna] iris[1,] ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa iris[,1] ## [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4 ## [18] 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5 ## [35] 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 7.0 ## [52] 6.4 6.9 5.5 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6 5.8 ## [69] 6.2 5.6 5.9 6.1 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0 5.4 ## [86] 6.0 6.7 6.3 5.6 5.5 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8 ## [103] 7.1 6.3 6.5 7.6 4.9 7.3 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7 ## [120] 6.0 6.9 5.6 7.7 6.3 6.7 7.2 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7 ## [137] 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8 6.7 6.7 6.3 6.5 6.2 5.9 iris[1,1] ## [1] 5.1 iris$Sepal.Length ## [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4 ## [18] 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5 ## [35] 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 7.0 ## [52] 6.4 6.9 5.5 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6 5.8 ## [69] 6.2 5.6 5.9 6.1 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0 5.4 ## [86] 6.0 6.7 6.3 5.6 5.5 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8 ## [103] 7.1 6.3 6.5 7.6 4.9 7.3 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7 ## [120] 6.0 6.9 5.6 7.7 6.3 6.7 7.2 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7 ## [137] 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8 6.7 6.7 6.3 6.5 6.2 5.9 levels(iris$Species) ## [1] &quot;setosa&quot; &quot;versicolor&quot; &quot;virginica&quot; summary(iris$Sepal.Length) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 4.300 5.100 5.800 5.843 6.400 7.900 Selecione la segunda i) fila; ii) columna. iii) Seleccione la observación ubicada en la 2° fila y 3° columna iv) Seleccione las observaciones de las lineas 50 a 60 de las columnas 3 y 4. Función subset Filtremos a la variedad Species reteniendo solo a “setosa” iris_setosa &lt;- subset(iris, Species==&quot;setosa&quot;) Filtremos a la variedad Species reteniendo solo a “setosa” + “virginica” iris_set.virginica &lt;- subset(iris, Species %in% c(&quot;setosa&quot;, &quot;virginica&quot;)) Agreguemos una condición: a lo anterior quedemonos con aquellas filas en que Sepal.Length &gt; 5 iris2 &lt;- subset(iris, Species %in% c(&quot;setosa&quot;, &quot;virginica&quot;) &amp; Sepal.Length &gt; 5) Que pasa si cambiamos el operador &amp; por |? 2.2.3 Listas Objetos que aceptan elementos de clases diferentes. x &lt;- list(a = 1:5, b = c(&quot;a&quot;, &quot;b&quot;), c = TRUE) x ## $a ## [1] 1 2 3 4 5 ## ## $b ## [1] &quot;a&quot; &quot;b&quot; ## ## $c ## [1] TRUE x$a # ## [1] 1 2 3 4 5 x[1] # ## $a ## [1] 1 2 3 4 5 #sum(x[1]) x[[1]] # ## [1] 1 2 3 4 5 sum(x[[1]]) ## [1] 15 x[&quot;c&quot;] # ## $c ## [1] TRUE Referencias "]
]
