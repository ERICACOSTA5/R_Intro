[
["explore.html", "7 Visualizar", " 7 Visualizar La visualización de datos es una pieza fundamental del flujo de trabajo del científico, tanto para explorar sus observaciones, como para explicar/comunicar sus resultados e ideas. Es decir, dominar las herramientas de visualización resulta imprescindible para un investigador cuya materia prima son los datos. La gran comunidad de usuarios de R disponibiliza sus creaciones e incluso trabajan en extensiones que amplien la potencialidad de sus paquetes. Se podria afirmar que no hay límites para la creación. Digamos, que no importa el “Cómo?” si no el “Qué?” Algunas pruebas de ello son los siguientes links: The R Graph Gallery Top 50 plots Extensiones de ggplot Fundamentals of Data Visualization El paquete ggplot2 tiene una flexibilidad tal que permite generar rápidamente gráficos exploratorios asi como crear figuras complejas, detalladas de alta calidad (con fines de publicaciones científicas). "],
["ambas-variables-continuas.html", "7.1 Ambas variables continuas", " 7.1 Ambas variables continuas library(tidyverse) Tiene una gramática propia y la idea original es que un gráfico puede ser elaborado a partir de la combinación de capas, pudiendo tener estas diferentes bases de datos y objetos gráficos (puntos, líneas, barras, etc). Agregaremos una a una las capas mencionadas en la figura. Estas no tienen un orden estricto, salvo la primera que debe ser ggplot() que es la funcion que inicializa un grafico. A esta estarán asociada el dataframe principal (ya que un mismo grafico acepta tomar información de distintos datasets), y las aesthetics que o sea pueden haber varias aesthetics Se definen con aes() Significado de aesthetic en ggplot: “Algo que se puede ver” Cada geom acepta un conjunto de aesthetics Ejemplos: + position (i.e., en el eje “x” y “y”) color (color “exterior”) fill (color “interior”) shape (de los puntos) linetype size iris %&gt;% ggplot(aes(x = Sepal.Length, y = Petal.Length)) geoms Objetos geometricos son la representación visual de las observaciones. En general los que le dan el nombre al tipo de gráfico. La lista de “geoms” aumenta día a día. iris %&gt;% ggplot(aes(x=Sepal.Length, y=Petal.Length)) + geom_point() iris %&gt;% ggplot(aes(x=Sepal.Length, y=Petal.Length)) + geom_point(aes(color = Species)) iris %&gt;% ggplot(aes(x=Sepal.Length, y=Petal.Length)) + geom_point(aes(color = Species))+ geom_smooth() iris %&gt;% ggplot(aes(x = Sepal.Length, y = Petal.Length, color = Species)) + geom_point()+ geom_smooth() facets Las facetas o “facets” en permiten dividir el mismo gráfico en diferentes niveles de un factor. p &lt;- iris %&gt;% ggplot(aes(x = Sepal.Length, y = Petal.Length)) + geom_point()+ geom_smooth(method = &quot;lm&quot;)+ facet_wrap(~Species) p theme Los temas (theme) son un conjunto de opciones predefinidas sobre la apariencia de los objetos en ggplot. El tema por defecto del ggplot dibuja el gráfico sobre un fondo gris. Podemos cambiarlo a blanco y negro añadiendo el comando theme_bw() p + theme_bw() Si deseamos explorar las distribuciones de las variables podemos optar por un histograma o por diagramas de densidad cowplot::plot_grid( iris %&gt;% ggplot(aes(Petal.Length, fill=Species)) + geom_histogram()+ guides(fill=FALSE) , iris %&gt;% ggplot(aes(Petal.Length, fill=Species)) + geom_density(alpha=0.7) , align=&quot;h&quot; ) "],
["comparacion-de-niveles-de-factores.html", "7.2 Comparación de niveles de factores", " 7.2 Comparación de niveles de factores Los graficos de barra, ampliamente usados en publicaciones cientificas, son cada vez mas criticados por “ocultar” la naturaleza de las observaciones (Drummond and Vowler 2011; Weissgerber 2015) (Sugerencia: leer el box 1 del ultimo paper) De (Drummond and Vowler 2011): Fig 1. Many different datasets can lead to the same bar graph. The full data may suggest different conclusions from the summary statistics. The means and SEs for the four example datasets shown in Panels B–E are all within 0.5 units of the means and SEs shown in the bar graph (Panel A). p-values were calculated in R (version 3.0.3) using an unpaired t-test, an unpaired t-test with Welch’s correction for unequal variances, or a Wilcoxon rank sum test. - In Panel B, the distribution in both groups appears symmetric. Although the data suggest a small difference between groups, there is substantial overlap between groups. - In Panel C, the apparent difference between groups is driven by an outlier. - Panel D suggests a possible bimodal distribution. Additional data are needed to confirm that the distribution is bimodal and to determine whether this effect is explained by a covariate. - In Panel E, the smaller range of values in group two may simply be due to the fact that there are only three observations. Additional data for group two would be needed to determine whether the groups are actually different. A continuación presentamos algunas opciones gráficas que surgen de la combinación de medidas de posición y de dispersión. #Aprovechamos para customizar el `theme` a nuestro gusto y agregar algunos detalles: p0 &lt;- iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + labs(x = &quot;Iris species&quot;, y =&quot;Sepal length (cm)&quot;) + theme_light(base_size = 10) 7.2.1 Observaciones + media / mediana p1 &lt;-iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + geom_point(shape = 1, alpha=0.2)+ stat_summary(fun.y = mean, #median fun.ymin= mean, fun.ymax = mean, geom = &quot;point&quot;, size = 2)+ theme_light(base_size = 10)+ ggtitle(&quot;Observaciones (points) &amp; media&quot;) p1 # geom_dotplot(aes(fill = Species), # Use fill = Species here not in ggplot() # binaxis = &quot;y&quot;, # which axis to bin along # binwidth = 0.1, # Minimal difference considered diffeerent # stackdir = &quot;center&quot; # Centered # ) p2 &lt;- iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + geom_jitter(width = 0.2, alpha=0.2)+ stat_summary(fun.y = mean, #median fun.ymin= mean, fun.ymax = mean, geom = &quot;crossbar&quot;, size = 0.5)+ theme_light(base_size = 10)+ ggtitle(&quot;Observaciones (jitter) &amp; media&quot;) p2 7.2.2 Barplot + SE p3 &lt;-iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + # geom_bar(stat=&quot;identity&quot;) + stat_summary(fun.y=mean, position=position_dodge(width=0.95),geom=&quot;bar&quot;, colour=&quot;black&quot;,fill=&quot;grey90&quot;)+ stat_summary(fun.data=mean_cl_normal, geom=&quot;errorbar&quot;, width=0.2) + theme_light(base_size = 10)+ ggtitle(&quot;Barplot &amp; SEM&quot;) # geom_text(data= let, aes(label = M, x= trt, y=1, hjust=0.5),size = 4) p3 7.2.3 Box-plot p4 &lt;-iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + geom_boxplot(fill = &quot;grey90&quot;) + theme_light(base_size = 10)+ ggtitle(&quot;Boxplot &amp; mean&quot;) p4 7.2.4 Violin plot p5 &lt;-iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + geom_violin(trim=FALSE,fill = &quot;grey90&quot;)+ theme_light(base_size = 10)+ ggtitle(&quot;Violin plot&quot;) p5 7.2.5 Media &amp; dispersión p6 &lt;-iris %&gt;% ggplot(aes(x=Species, y=Sepal.Length)) + stat_summary(fun.y=&quot;mean&quot;, geom=&quot;point&quot;, size=2)+ stat_summary(fun.data = mean_se, geom = &quot;errorbar&quot;, width=0.2)+ stat_summary(fun.data= mean_sdl, geom = &quot;errorbar&quot;, color=&quot;red&quot;, width=0.2)+ stat_summary(fun.data = mean_cl_boot, geom = &quot;errorbar&quot;, color=&quot;blue&quot;, width=0.2)+ theme_light(base_size = 10)+ ggtitle(&quot;Media + SE (negro) / SD (rojo) / 95% CI (negro)&quot;) p6 cowplot::plot_grid(p1, p2, p3, p4, p5, p6, ncol = 3, nrow = 2) References "],
["forcats.html", "7.3 forcats::", " 7.3 forcats:: Es un excelente aliado para manipular factores, principalmente cuando de graficar se trata. Sitio oficial- machete library(forcats) iris %&gt;% ggplot(aes(x = Species,y = Sepal.Width)) + geom_boxplot() fct_relevel A veces queremos forzar los niveles según nuestro interés (Queremos posicionar al tratamiento control al inicio o al final) iris %&gt;% ggplot(aes(x = fct_relevel(Species, c(&quot;virginica&quot;, &quot;setosa&quot;, &quot;versicolor&quot;)), y = Sepal.Width)) + geom_boxplot() fct_reorder Cuando queremos ver el orden de los tratamientos rankeados segun la variable iris %&gt;% ggplot(aes(x = fct_reorder(Species, Sepal.Width, fun=median), #.desc=TRUE y = Sepal.Width)) + geom_boxplot()#+ # geom_jitter(position=position_jitter(0.1))+ # coord_flip() case_when Asociado a mutate, cuando deseamos modificar el nombre de los niveles iris %&gt;% mutate(species_new = # `nombre_nuevo` = &quot;nombre_original&quot; case_when(Species==&quot;setosa&quot; ~ &quot;Setosa&quot;, Species==&quot;versicolor&quot; ~ &quot;Versicolor&quot;, Species==&quot;virginica&quot; ~ &quot;Virginica&quot;)) %&gt;% # TRUE ~ &quot;Virginica&quot;)) ggplot(aes(x = species_new, y = Sepal.Width)) + geom_boxplot() O queremos generar un nuevo vector categórico a partir de una variable pre-existente iris %&gt;% mutate(sepal_categ = case_when( Sepal.Length &gt; 5.5 ~ &quot;long&quot;, Sepal.Length &gt; 5 ~ &quot;medium&quot;, TRUE ~ &quot;short&quot; )) %&gt;% ggplot(aes(x = Species, y = Sepal.Width, color = sepal_categ)) + geom_boxplot() fct_reorder2 Reordenar los nivels por su valor final cuando son graficados con otras dos variables iris %&gt;% ggplot(aes(Sepal.Width, Sepal.Length, color = fct_reorder2(Species, Sepal.Width, Sepal.Length))) + geom_smooth(se=F) fct_infreq starwars %&gt;% # mutate(eye_color = fct_infreq(eye_color)) %&gt;% ggplot(aes(x = eye_color)) + geom_bar() + coord_flip() "],
["multivariado.html", "7.4 Multivariado", " 7.4 Multivariado library(ggplot2) corr &lt;- round(cor(iris[,-5]), 1) library(GGally) ggpairs(iris, columns = 1:4) ggpairs(iris, columns = 1:4, ggplot2::aes(colour=Species)) library(ggcorrplot) ggcorrplot(corr, p.mat = cor_pmat(iris[,-5]), hc.order = TRUE, type = &quot;lower&quot;, color = c(&quot;#FC4E07&quot;, &quot;white&quot;, &quot;#00AFBB&quot;), outline.col = &quot;white&quot;, lab = TRUE) library(FactoMineR) library(factoextra) iris.pca &lt;- PCA(iris[,-5], graph = FALSE) fviz_pca_var(iris.pca) fviz_pca_ind(iris.pca, col.ind.sup = &quot;blue&quot;, repel = FALSE) fviz_pca_biplot(iris.pca, geom.ind = &quot;point&quot; # Individuals ) fviz_pca_biplot(iris.pca, col.ind = iris$Species, palette = &quot;jco&quot;, addEllipses = TRUE, #ellipse.type = &quot;confidence&quot;, label = &quot;var&quot;, col.var = &quot;black&quot;, repel = TRUE, legend.title = &quot;Species&quot;) fviz_pca_biplot(iris.pca, # Individuals geom.ind = &quot;point&quot;, fill.ind = iris$Species, col.ind = &quot;black&quot;, pointshape = 21, pointsize = 2, palette = &quot;jco&quot;, addEllipses = TRUE, # Variables # alpha.var =&quot;contrib&quot;, col.var = &quot;contrib&quot;, gradient.cols = &quot;RdYlBu&quot;, legend.title = list(fill = &quot;Species&quot;, colour = &quot;Contribution&quot;) ) "]
]
